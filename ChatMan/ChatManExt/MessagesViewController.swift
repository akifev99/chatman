//
//  MessagesViewController.swift
//  ChatManExt
//
//  Created by Maksim Akifev on 10/7/17.
//  Copyright Â© 2017 akifev. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    private func composeMessage(with generatedMessage: String) {
        let conversation = activeConversation
        let session = conversation?.selectedMessage?.session ?? MSSession()
        
        let layout = MSMessageTemplateLayout()
        //layout.image = UIImage(named: "message-background.png")
        layout.imageTitle = "iMessage Extension"
        layout.caption = generatedMessage
        layout.subcaption = "Sent by ChatMan"
        
        let message = MSMessage(session: session)
        message.layout = layout
        
        conversation?.insert(message)
    }
    
    @IBOutlet weak var inputTextField: UITextField!
    @IBOutlet weak var answerLabel: UILabel!
    
    @IBAction func generateAnswerButton(_ sender: Any) {
        let cleverBotDataModel = CleverBotModel(input: inputTextField.text!)
        cleverBotDataModel.loadData {
            cleverBotDataModel.input = self.inputTextField.text
            self.inputTextField.text = ""
            self.answerLabel.text = cleverBotDataModel.output
        }
    }
    
    @IBAction func refreshAnswerButton(_ sender: Any) {
        let cleverBotModel = CleverBotModel()
        cleverBotModel.outputOther = answerLabel.text
    }
    
    @IBAction func sendAnswerButton(_ sender: Any) {
        composeMessage(with:answerLabel.text ?? "")
        answerLabel.text = nil
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        /*
        var converstatinId = ""
        let initialMessage = "Hi"
        let model = Model(cs: converstatinId)
        model.replyToMessage {
            converstatinId = model.cs
        }
        let defaults = UserDefaults.standard
        defaults.set(conversationId, forKey: "conversationId")
        defaults.synchronize()
        */
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }

}
